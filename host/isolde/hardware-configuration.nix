# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = [
    "xhci_pci"
    "ahci"
    "nvme"
    "usb_storage"
    "sd_mod"
    "rtsx_pci_sdmmc"
  ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/4bb47d5b-8f8e-491f-8e3c-055c5dd08907";
    fsType = "ext4";
  };

  boot.initrd.luks.devices = {
    "luks-4d36c0fe-3568-4135-b3e7-8eca9dcb7628".device =
      "/dev/disk/by-uuid/4d36c0fe-3568-4135-b3e7-8eca9dcb7628";
    "luks-52a8cd01-c99c-4ea7-8a07-2494b99be5b4".device =
      "/dev/disk/by-uuid/52a8cd01-c99c-4ea7-8a07-2494b99be5b4";
  };

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/7E25-5B1C";
    fsType = "vfat";
    options = [
      "fmask=0077"
      "dmask=0077"
    ];
  };

  swapDevices = [
    { device = "/dev/disk/by-uuid/788f97bb-a92e-49de-9edf-758cd8270aac"; }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp2s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
